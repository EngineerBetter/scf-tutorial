---
# Service account "secret-generator" is used by the following instance groups:
# - secret-generation
apiVersion: "v1"
kind: "ServiceAccount"
metadata:
  name: "secret-generator"
  labels:
    app.kubernetes.io/component: "secret-generator"
---
# Role binding for service account "secret-generator" and role "configgin-role"
apiVersion: "rbac.authorization.k8s.io/v1"
kind: "RoleBinding"
metadata:
  name: "secret-generator-configgin-role-binding"
  labels:
    app.kubernetes.io/component: "secret-generator-configgin-role-binding"
subjects:
- kind: "ServiceAccount"
  name: "secret-generator"
roleRef:
  apiGroup: "rbac.authorization.k8s.io"
  kind: "Role"
  name: "configgin-role"
---
# Role "secrets-role" only used by account "[- secret-generator]"
apiVersion: "rbac.authorization.k8s.io/v1"
kind: "Role"
metadata:
  name: "secrets-role"
  labels:
    app.kubernetes.io/component: "secrets-role"
rules:
- apiGroups:
  - ""
  resources:
  - "configmaps"
  - "secrets"
  verbs:
  - "create"
  - "get"
  - "list"
  - "patch"
  - "update"
  - "delete"
---
# Role binding for service account "secret-generator" and role "secrets-role"
apiVersion: "rbac.authorization.k8s.io/v1"
kind: "RoleBinding"
metadata:
  name: "secret-generator-secrets-role-binding"
  labels:
    app.kubernetes.io/component: "secret-generator-secrets-role-binding"
subjects:
- kind: "ServiceAccount"
  name: "secret-generator"
roleRef:
  apiGroup: "rbac.authorization.k8s.io"
  kind: "Role"
  name: "secrets-role"
---
# Cluster role binding for service account "secret-generator" and cluster role
# "nonprivileged"
apiVersion: "rbac.authorization.k8s.io/v1"
kind: "ClusterRoleBinding"
metadata:
  name: "secret-generator-nonprivileged-cluster-binding"
  labels:
    app.kubernetes.io/component: "secret-generator-nonprivileged-cluster-binding"
subjects:
- kind: "ServiceAccount"
  name: "secret-generator"
  namespace: "~"
roleRef:
  kind: "ClusterRole"
  apiGroup: "rbac.authorization.k8s.io"
  name: "nonprivileged"
---
# The secret-generation instance group contains the following jobs:
#
# - generate-secrets: This job will generate the secrets for the cluster
apiVersion: "batch/v1"
kind: "Job"
metadata:
  name: "secret-generation"
  labels:
    app.kubernetes.io/component: "secret-generation"
spec:
  template:
    metadata:
      name: "secret-generation"
      labels:
        app.kubernetes.io/component: "secret-generation"
    spec:
      containers:
      - env:
        - name: "CERT_EXPIRATION"
          value: "10950"
        - name: "DOMAIN"
          value: ""
        - name: "HELM_IS_INSTALL"
          value: "true"
        - name: "KUBERNETES_CLUSTER_DOMAIN"
          value: ""
        - name: "KUBERNETES_NAMESPACE"
          valueFrom:
            fieldRef:
              fieldPath: "metadata.namespace"
        - name: "KUBE_SECRETS_GENERATION_COUNTER"
          value: "1"
        - name: "KUBE_SECRETS_GENERATION_NAME"
          value: "secrets-1"
        - name: "SCF_LOG_HOST"
          value: ""
        - name: "SCF_LOG_PORT"
          value: "514"
        - name: "SCF_LOG_PROTOCOL"
          value: "tcp"
        - name: "VCAP_HARD_NPROC"
          value: "2048"
        - name: "VCAP_SOFT_NPROC"
          value: "1024"
        image: "registry.suse.com/cap/uaa-secret-generation:dfc4d082a5e5c350cd6a3fcdf1c0a3fe40ec4017"
        lifecycle:
          preStop:
            exec:
              command:
              - "/opt/fissile/pre-stop.sh"
        livenessProbe: ~
        name: "secret-generation"
        ports: ~
        readinessProbe: ~
        resources:
          requests:
            memory: "256Mi"
            cpu: "1000m"
          limits: {}
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: "/opt/fissile/config"
          name: "deployment-manifest"
          readOnly: true
      dnsPolicy: "ClusterFirst"
      imagePullSecrets:
      - name: "registry-credentials"
      restartPolicy: "OnFailure"
      serviceAccountName: "secret-generator"
      terminationGracePeriodSeconds: 600
      volumes:
      - name: "deployment-manifest"
        secret:
          secretName: "deployment-manifest"
          items:
          - key: "deployment-manifest"
            path: "deployment-manifest.yml"
