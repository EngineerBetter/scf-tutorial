---
# Service account "garden-runc" is used by the following instance groups:
# - diego-cell
apiVersion: "v1"
kind: "ServiceAccount"
metadata:
  name: "garden-runc"
  labels:
    app.kubernetes.io/component: "garden-runc"
---
# Role binding for service account "garden-runc" and role "configgin-role"
apiVersion: "rbac.authorization.k8s.io/v1"
kind: "RoleBinding"
metadata:
  name: "garden-runc-configgin-role-binding"
  labels:
    app.kubernetes.io/component: "garden-runc-configgin-role-binding"
subjects:
- kind: "ServiceAccount"
  name: "garden-runc"
roleRef:
  apiGroup: "rbac.authorization.k8s.io"
  kind: "Role"
  name: "configgin-role"
---
# Cluster role binding for service account "garden-runc" and cluster role
# "privileged"
apiVersion: "rbac.authorization.k8s.io/v1"
kind: "ClusterRoleBinding"
metadata:
  name: "garden-runc-privileged-cluster-binding"
  labels:
    app.kubernetes.io/component: "garden-runc-privileged-cluster-binding"
subjects:
- kind: "ServiceAccount"
  name: "garden-runc"
  namespace: "~"
roleRef:
  kind: "ClusterRole"
  apiGroup: "rbac.authorization.k8s.io"
  name: "privileged"
---
# Cluster role "node-reader-role" only used by account "[garden-runc]"
apiVersion: "rbac.authorization.k8s.io/v1"
kind: "ClusterRole"
metadata:
  name: "node-reader-role"
  labels:
    app.kubernetes.io/component: "node-reader-role"
rules:
- apiGroups:
  - ""
  resources:
  - "nodes"
  verbs:
  - "get"
  - "list"
  - "watch"
---
# Cluster role binding for service account "garden-runc" and cluster role
# "node-reader-role"
apiVersion: "rbac.authorization.k8s.io/v1"
kind: "ClusterRoleBinding"
metadata:
  name: "garden-runc-node-reader-role-cluster-binding"
  labels:
    app.kubernetes.io/component: "garden-runc-node-reader-role-cluster-binding"
subjects:
- kind: "ServiceAccount"
  name: "garden-runc"
  namespace: "~"
roleRef:
  kind: "ClusterRole"
  apiGroup: "rbac.authorization.k8s.io"
  name: "node-reader-role"
---
apiVersion: "v1"
items:
- apiVersion: "v1"
  kind: "Service"
  metadata:
    name: "diego-cell-set"
    labels:
      app.kubernetes.io/component: "diego-cell-set"
  spec:
    clusterIP: "None"
    ports:
    - name: "rep-server"
      port: 1801
      protocol: "TCP"
      targetPort: 0
    - name: "nfs-driver"
      port: 7589
      protocol: "TCP"
      targetPort: 0
    - name: "nfs-admin"
      port: 7590
      protocol: "TCP"
      targetPort: 0
    selector:
      app.kubernetes.io/component: "diego-cell"
- apiVersion: "v1"
  kind: "Service"
  metadata:
    name: "diego-cell-rep-set"
    labels:
      app.kubernetes.io/component: "diego-cell-rep-set"
  spec:
    clusterIP: "None"
    ports:
    - name: "rep-server"
      port: 1801
      protocol: "TCP"
      targetPort: 0
    selector:
      app.kubernetes.io/component: "diego-cell"
- apiVersion: "v1"
  kind: "Service"
  metadata:
    name: "diego-cell-rep"
    labels:
      app.kubernetes.io/component: "diego-cell-rep"
  spec:
    ports:
    - name: "rep-server"
      port: 1801
      protocol: "TCP"
      targetPort: 1801
    selector:
      app.kubernetes.io/component: "diego-cell"
- apiVersion: "v1"
  kind: "Service"
  metadata:
    name: "diego-cell-nfsv3driver-set"
    labels:
      app.kubernetes.io/component: "diego-cell-nfsv3driver-set"
  spec:
    clusterIP: "None"
    ports:
    - name: "nfs-driver"
      port: 7589
      protocol: "TCP"
      targetPort: 0
    - name: "nfs-admin"
      port: 7590
      protocol: "TCP"
      targetPort: 0
    selector:
      app.kubernetes.io/component: "diego-cell"
- apiVersion: "v1"
  kind: "Service"
  metadata:
    name: "diego-cell-nfsv3driver"
    labels:
      app.kubernetes.io/component: "diego-cell-nfsv3driver"
  spec:
    ports:
    - name: "nfs-driver"
      port: 7589
      protocol: "TCP"
      targetPort: 7589
    - name: "nfs-admin"
      port: 7590
      protocol: "TCP"
      targetPort: 7590
    selector:
      app.kubernetes.io/component: "diego-cell"
kind: "List"
---
# The diego-cell instance group contains the following jobs:
#
# - global-properties: Dummy BOSH job used to host global parameters that are
#   required to configure SCF
#
# - authorize-internal-ca: Install both internal and UAA CA certificates
#
# - get-kubectl: This job exists only to ensure the presence of the kubectl
#   binary in the role referencing it.
#
# - wait-for-uaa: Wait for UAA to be ready before starting any jobs
#
# - patch-properties: Dummy BOSH job used to host parameters that are used in
#   SCF patches for upstream bugs
#
# Also: rep, cfdot, route_emitter, garden, groot-btrfs, cflinuxfs2-rootfs-setup,
# cflinuxfs3-rootfs-setup, cf-sle12-setup, sle15-rootfs-setup, nfsv3driver, and
# mapfs
apiVersion: "apps/v1beta1"
kind: "StatefulSet"
metadata:
  name: "diego-cell"
  labels:
    app.kubernetes.io/component: "diego-cell"
spec:
  podManagementPolicy: "Parallel"
  replicas: 1
  selector:
    matchLabels:
      skiff-role-name: "diego-cell"
  serviceName: "diego-cell-set"
  template:
    metadata:
      annotations: {}
      labels:
        app.kubernetes.io/component: "diego-cell"
      name: "diego-cell"
    spec:
      containers:
      - env:
        - name: "AZ_LABEL_NAME"
          value: ""
        - name: "BBS_CLIENT_CRT"
          valueFrom:
            secretKeyRef:
              key: "bbs-client-crt"
              name: "secrets"
        - name: "BBS_CLIENT_CRT_KEY"
          valueFrom:
            secretKeyRef:
              key: "bbs-client-crt-key"
              name: "secrets"
        - name: "BBS_REP_CERT"
          valueFrom:
            secretKeyRef:
              key: "bbs-rep-cert"
              name: "secrets"
        - name: "BBS_REP_CERT_KEY"
          valueFrom:
            secretKeyRef:
              key: "bbs-rep-cert-key"
              name: "secrets"
        - name: "CATS_SUITES"
          value: ""
        - name: "DIEGO_CELL_DISK_CAPACITY_MB"
          value: "auto"
        - name: "DIEGO_CELL_MEMORY_CAPACITY_MB"
          value: "auto"
        - name: "DIEGO_CELL_NETWORK_MTU"
          value: "1400"
        - name: "DIEGO_CELL_SUBNET"
          value: "10.38.0.0/16"
        - name: "GARDEN_APPARMOR_PROFILE"
          value: "garden-default"
        - name: "GARDEN_DOCKER_REGISTRY"
          value: "registry-1.docker.io"
        - name: "GARDEN_LINUX_DNS_SERVER"
          value: ""
        - name: "GARDEN_ROOTFS_DRIVER"
          value: "btrfs"
        - name: "HTTPS_PROXY"
          value: ""
        - name: "HTTP_PROXY"
          value: ""
        - name: "INSECURE_DOCKER_REGISTRIES"
          value: ""
        - name: "INTERNAL_CA_CERT"
          valueFrom:
            secretKeyRef:
              key: "internal-ca-cert"
              name: "secrets"
        - name: "KUBERNETES_CLUSTER_DOMAIN"
          value: ""
        - name: "KUBERNETES_NAMESPACE"
          valueFrom:
            fieldRef:
              fieldPath: "metadata.namespace"
        - name: "KUBE_AZ"
          value: "z1"
        - name: "KUBE_SIZING_NATS_COUNT"
          value: "1"
        - name: "LOGGREGATOR_CLIENT_CERT"
          valueFrom:
            secretKeyRef:
              key: "loggregator-client-cert"
              name: "secrets"
        - name: "LOGGREGATOR_CLIENT_CERT_KEY"
          valueFrom:
            secretKeyRef:
              key: "loggregator-client-cert-key"
              name: "secrets"
        - name: "LOG_LEVEL"
          value: "info"
        - name: "MONIT_PASSWORD"
          valueFrom:
            secretKeyRef:
              key: "monit-password"
              name: "secrets"
        - name: "NATS_PASSWORD"
          valueFrom:
            secretKeyRef:
              key: "nats-password"
              name: "secrets"
        - name: "NO_PROXY"
          value: ""
        - name: "PERSI_NFS_DRIVER_ALLOWED_IN_MOUNT"
          value: "auto_cache"
        - name: "PERSI_NFS_DRIVER_ALLOWED_IN_SOURCE"
          value: "uid,gid"
        - name: "PERSI_NFS_DRIVER_DEFAULT_IN_MOUNT"
          value: "auto_cache:true"
        - name: "PERSI_NFS_DRIVER_DEFAULT_IN_SOURCE"
          value: ""
        - name: "PERSI_NFS_DRIVER_DISABLE"
          value: "false"
        - name: "PERSI_NFS_DRIVER_LDAP_HOST"
          value: ""
        - name: "PERSI_NFS_DRIVER_LDAP_PASSWORD"
          valueFrom:
            secretKeyRef:
              key: "persi-nfs-driver-ldap-password"
              name: "secrets"
        - name: "PERSI_NFS_DRIVER_LDAP_PORT"
          value: "389"
        - name: "PERSI_NFS_DRIVER_LDAP_PROTOCOL"
          value: "tcp"
        - name: "PERSI_NFS_DRIVER_LDAP_USER"
          value: ""
        - name: "PERSI_NFS_DRIVER_LDAP_USER_FQDN"
          value: ""
        - name: "PZ_LABEL_NAME"
          value: ""
        - name: "REP_SERVER_CERT"
          valueFrom:
            secretKeyRef:
              key: "rep-server-cert"
              name: "secrets"
        - name: "REP_SERVER_CERT_KEY"
          valueFrom:
            secretKeyRef:
              key: "rep-server-cert-key"
              name: "secrets"
        - name: "ROOTFS_TRUSTED_CERTS"
          value: ""
        - name: "SCF_LOG_HOST"
          value: ""
        - name: "SCF_LOG_PORT"
          value: "514"
        - name: "SCF_LOG_PROTOCOL"
          value: "tcp"
        - name: "TRUSTED_CERTS"
          value: ""
        - name: "UAA_CA_CERT"
          valueFrom:
            secretKeyRef:
              key: "uaa-ca-cert"
              name: "secrets"
        - name: "UAA_CLIENTS_TCP_EMITTER_SECRET"
          valueFrom:
            secretKeyRef:
              key: "uaa-clients-tcp-emitter-secret"
              name: "secrets"
        - name: "UAA_HOST"
          value: ""
        - name: "UAA_PORT"
          value: "2793"
        - name: "VCAP_HARD_NPROC"
          value: "2048"
        - name: "VCAP_SOFT_NPROC"
          value: "1024"
        image: "registry.suse.com/cap/scf-diego-cell:041fb1a3df50eb4da8aca64500b248cbe444810d"
        lifecycle:
          preStop:
            exec:
              command:
              - "/opt/fissile/pre-stop.sh"
        livenessProbe: ~
        name: "diego-cell"
        ports:
        - containerPort: 1801
          name: "rep-server"
          protocol: "TCP"
        - containerPort: 7589
          name: "nfs-driver"
          protocol: "TCP"
        - containerPort: 7590
          name: "nfs-admin"
          protocol: "TCP"
        readinessProbe:
          exec:
            command:
            - "/opt/fissile/readiness-probe.sh"
        resources:
          requests:
            memory: "2800Mi"
            cpu: "4000m"
          limits: {}
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: "/var/vcap/data/grootfs"
          name: "grootfs-data"
          readOnly: false
        - mountPath: "/sys/fs/cgroup"
          name: "host-cgroup"
          readOnly: false
        - mountPath: "/opt/fissile/config"
          name: "deployment-manifest"
          readOnly: true
      - env:
        - name: "AZ_LABEL_NAME"
          value: ""
        - name: "CATS_SUITES"
          value: ""
        - name: "GARDEN_ROOTFS_DRIVER"
          value: "btrfs"
        - name: "INTERNAL_CA_CERT"
          valueFrom:
            secretKeyRef:
              key: "internal-ca-cert"
              name: "secrets"
        - name: "KUBERNETES_CLUSTER_DOMAIN"
          value: ""
        - name: "KUBERNETES_NAMESPACE"
          valueFrom:
            fieldRef:
              fieldPath: "metadata.namespace"
        - name: "KUBE_AZ"
          value: "z1"
        - name: "LOGGREGATOR_AGENT_CERT"
          valueFrom:
            secretKeyRef:
              key: "loggregator-agent-cert"
              name: "secrets"
        - name: "LOGGREGATOR_AGENT_CERT_KEY"
          valueFrom:
            secretKeyRef:
              key: "loggregator-agent-cert-key"
              name: "secrets"
        - name: "LOGGREGATOR_FORWARD_CERT"
          valueFrom:
            secretKeyRef:
              key: "loggregator-forward-cert"
              name: "secrets"
        - name: "LOGGREGATOR_FORWARD_CERT_KEY"
          valueFrom:
            secretKeyRef:
              key: "loggregator-forward-cert-key"
              name: "secrets"
        - name: "MONIT_PASSWORD"
          valueFrom:
            secretKeyRef:
              key: "monit-password"
              name: "secrets"
        - name: "PZ_LABEL_NAME"
          value: ""
        - name: "SCF_LOG_HOST"
          value: ""
        - name: "SCF_LOG_PORT"
          value: "514"
        - name: "SCF_LOG_PROTOCOL"
          value: "tcp"
        - name: "VCAP_HARD_NPROC"
          value: "2048"
        - name: "VCAP_SOFT_NPROC"
          value: "1024"
        image: "registry.suse.com/cap/scf-loggregator-agent:39c7e06aaa613d8d7ae5ac05dc952c5d1cf1be17"
        lifecycle:
          preStop:
            exec:
              command:
              - "/opt/fissile/pre-stop.sh"
        livenessProbe: ~
        name: "loggregator-agent"
        ports: ~
        readinessProbe: ~
        resources:
          requests: {}
          limits: {}
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: "/opt/fissile/config"
          name: "deployment-manifest"
          readOnly: true
      dnsPolicy: "ClusterFirst"
      imagePullSecrets:
      - name: "registry-credentials"
      restartPolicy: "Always"
      serviceAccountName: "garden-runc"
      terminationGracePeriodSeconds: 600
      volumes:
      - name: "host-cgroup"
        hostPath:
          path: "/sys/fs/cgroup"
      - name: "deployment-manifest"
        secret:
          secretName: "deployment-manifest"
          items:
          - key: "deployment-manifest"
            path: "deployment-manifest.yml"
  volumeClaimTemplates:
  - metadata:
      name: "grootfs-data"
      annotations:
        volume.beta.kubernetes.io/storage-class: "persistent"
    spec:
      accessModes:
      - "ReadWriteOnce"
      resources:
        requests:
          storage: "50G"
