---
apiVersion: "v1"
items:
- apiVersion: "v1"
  kind: "Service"
  metadata:
    name: "diego-api-set"
    labels:
      app.kubernetes.io/component: "diego-api-set"
  spec:
    clusterIP: "None"
    ports:
    - name: "cell-bbs-api"
      port: 8889
      protocol: "TCP"
      targetPort: 0
    - name: "cell-bbs-dbg"
      port: 17017
      protocol: "TCP"
      targetPort: 0
    selector:
      app.kubernetes.io/component: "diego-api"
      skiff-role-active: "true"
- apiVersion: "v1"
  kind: "Service"
  metadata:
    name: "diego-api-bbs-set"
    labels:
      app.kubernetes.io/component: "diego-api-bbs-set"
  spec:
    clusterIP: "None"
    ports:
    - name: "cell-bbs-api"
      port: 8889
      protocol: "TCP"
      targetPort: 0
    - name: "cell-bbs-dbg"
      port: 17017
      protocol: "TCP"
      targetPort: 0
    selector:
      app.kubernetes.io/component: "diego-api"
      skiff-role-active: "true"
- apiVersion: "v1"
  kind: "Service"
  metadata:
    name: "diego-api-bbs"
    labels:
      app.kubernetes.io/component: "diego-api-bbs"
  spec:
    ports:
    - name: "cell-bbs-api"
      port: 8889
      protocol: "TCP"
      targetPort: 8889
    - name: "cell-bbs-dbg"
      port: 17017
      protocol: "TCP"
      targetPort: 17017
    selector:
      app.kubernetes.io/component: "diego-api"
      skiff-role-active: "true"
kind: "List"
---
# The diego-api instance group contains the following jobs:
#
# - global-properties: Dummy BOSH job used to host global parameters that are
#   required to configure SCF
#
# - authorize-internal-ca: Install both internal and UAA CA certificates
#
# - patch-properties: Dummy BOSH job used to host parameters that are used in
#   SCF patches for upstream bugs
#
# Also: bbs and cfdot
apiVersion: "apps/v1beta1"
kind: "StatefulSet"
metadata:
  name: "diego-api"
  labels:
    app.kubernetes.io/component: "diego-api"
spec:
  podManagementPolicy: "OrderedReady"
  replicas: 1
  selector:
    matchLabels:
      skiff-role-name: "diego-api"
  serviceName: "diego-api-set"
  template:
    metadata:
      annotations: {}
      labels:
        app.kubernetes.io/component: "diego-api"
      name: "diego-api"
    spec:
      containers:
      - env:
        - name: "AZ_LABEL_NAME"
          value: ""
        - name: "BBS_ACTIVE_KEY_PASSPHRASE"
          valueFrom:
            secretKeyRef:
              key: "bbs-active-key-passphrase"
              name: "secrets"
        - name: "BBS_AUCTIONEER_CERT"
          valueFrom:
            secretKeyRef:
              key: "bbs-auctioneer-cert"
              name: "secrets"
        - name: "BBS_AUCTIONEER_CERT_KEY"
          valueFrom:
            secretKeyRef:
              key: "bbs-auctioneer-cert-key"
              name: "secrets"
        - name: "BBS_REP_CERT"
          valueFrom:
            secretKeyRef:
              key: "bbs-rep-cert"
              name: "secrets"
        - name: "BBS_REP_CERT_KEY"
          valueFrom:
            secretKeyRef:
              key: "bbs-rep-cert-key"
              name: "secrets"
        - name: "BBS_SERVER_CRT"
          valueFrom:
            secretKeyRef:
              key: "bbs-server-crt"
              name: "secrets"
        - name: "BBS_SERVER_CRT_KEY"
          valueFrom:
            secretKeyRef:
              key: "bbs-server-crt-key"
              name: "secrets"
        - name: "CATS_SUITES"
          value: ""
        - name: "GARDEN_ROOTFS_DRIVER"
          value: "btrfs"
        - name: "INTERNAL_CA_CERT"
          valueFrom:
            secretKeyRef:
              key: "internal-ca-cert"
              name: "secrets"
        - name: "KUBERNETES_CLUSTER_DOMAIN"
          value: ""
        - name: "KUBERNETES_NAMESPACE"
          valueFrom:
            fieldRef:
              fieldPath: "metadata.namespace"
        - name: "LOGGREGATOR_CLIENT_CERT"
          valueFrom:
            secretKeyRef:
              key: "loggregator-client-cert"
              name: "secrets"
        - name: "LOGGREGATOR_CLIENT_CERT_KEY"
          valueFrom:
            secretKeyRef:
              key: "loggregator-client-cert-key"
              name: "secrets"
        - name: "LOG_LEVEL"
          value: "info"
        - name: "MONIT_PASSWORD"
          valueFrom:
            secretKeyRef:
              key: "monit-password"
              name: "secrets"
        - name: "MYSQL_DIEGO_PASSWORD"
          valueFrom:
            secretKeyRef:
              key: "mysql-diego-password"
              name: "secrets"
        - name: "PZ_LABEL_NAME"
          value: ""
        - name: "SCF_LOG_HOST"
          value: ""
        - name: "SCF_LOG_PORT"
          value: "514"
        - name: "SCF_LOG_PROTOCOL"
          value: "tcp"
        - name: "UAA_CA_CERT"
          valueFrom:
            secretKeyRef:
              key: "uaa-ca-cert"
              name: "secrets"
        - name: "VCAP_HARD_NPROC"
          value: "2048"
        - name: "VCAP_SOFT_NPROC"
          value: "1024"
        image: "registry.suse.com/cap/scf-diego-api:2152f18cf3568a139ef9872414859bd6b6dc0671"
        lifecycle:
          preStop:
            exec:
              command:
              - "/opt/fissile/pre-stop.sh"
        livenessProbe: ~
        name: "diego-api"
        ports:
        - containerPort: 8889
          name: "cell-bbs-api"
          protocol: "TCP"
        - containerPort: 17017
          name: "cell-bbs-dbg"
          protocol: "TCP"
        readinessProbe:
          exec:
            command:
            - "/usr/bin/env"
            - "FISSILE_ACTIVE_PASSIVE_PROBE=/var/vcap/jobs/global-properties/bin/readiness/diego-api"
            - "/opt/fissile/readiness-probe.sh"
            - "curl --fail http://$(jq -r .health_address /var/vcap/jobs/bbs/config/bbs.json)/ping"
        resources:
          requests:
            memory: "128Mi"
            cpu: "2000m"
          limits: {}
        securityContext:
          capabilities:
            add:
            - "SYS_RESOURCE"
          allowPrivilegeEscalation: true
        volumeMounts:
        - mountPath: "/opt/fissile/config"
          name: "deployment-manifest"
          readOnly: true
      - env:
        - name: "AZ_LABEL_NAME"
          value: ""
        - name: "CATS_SUITES"
          value: ""
        - name: "GARDEN_ROOTFS_DRIVER"
          value: "btrfs"
        - name: "INTERNAL_CA_CERT"
          valueFrom:
            secretKeyRef:
              key: "internal-ca-cert"
              name: "secrets"
        - name: "KUBERNETES_CLUSTER_DOMAIN"
          value: ""
        - name: "KUBERNETES_NAMESPACE"
          valueFrom:
            fieldRef:
              fieldPath: "metadata.namespace"
        - name: "KUBE_AZ"
          value: "z1"
        - name: "LOGGREGATOR_AGENT_CERT"
          valueFrom:
            secretKeyRef:
              key: "loggregator-agent-cert"
              name: "secrets"
        - name: "LOGGREGATOR_AGENT_CERT_KEY"
          valueFrom:
            secretKeyRef:
              key: "loggregator-agent-cert-key"
              name: "secrets"
        - name: "LOGGREGATOR_FORWARD_CERT"
          valueFrom:
            secretKeyRef:
              key: "loggregator-forward-cert"
              name: "secrets"
        - name: "LOGGREGATOR_FORWARD_CERT_KEY"
          valueFrom:
            secretKeyRef:
              key: "loggregator-forward-cert-key"
              name: "secrets"
        - name: "MONIT_PASSWORD"
          valueFrom:
            secretKeyRef:
              key: "monit-password"
              name: "secrets"
        - name: "PZ_LABEL_NAME"
          value: ""
        - name: "SCF_LOG_HOST"
          value: ""
        - name: "SCF_LOG_PORT"
          value: "514"
        - name: "SCF_LOG_PROTOCOL"
          value: "tcp"
        - name: "VCAP_HARD_NPROC"
          value: "2048"
        - name: "VCAP_SOFT_NPROC"
          value: "1024"
        image: "registry.suse.com/cap/scf-loggregator-agent:39c7e06aaa613d8d7ae5ac05dc952c5d1cf1be17"
        lifecycle:
          preStop:
            exec:
              command:
              - "/opt/fissile/pre-stop.sh"
        livenessProbe: ~
        name: "loggregator-agent"
        ports: ~
        readinessProbe: ~
        resources:
          requests: {}
          limits: {}
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: "/opt/fissile/config"
          name: "deployment-manifest"
          readOnly: true
      dnsPolicy: "ClusterFirst"
      imagePullSecrets:
      - name: "registry-credentials"
      restartPolicy: "Always"
      serviceAccountName: "privileged"
      terminationGracePeriodSeconds: 600
      volumes:
      - name: "deployment-manifest"
        secret:
          secretName: "deployment-manifest"
          items:
          - key: "deployment-manifest"
            path: "deployment-manifest.yml"
