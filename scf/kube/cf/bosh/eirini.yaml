---
# Service account "eirini-privileged" is used by the following instance groups:
# - eirini
apiVersion: "v1"
kind: "ServiceAccount"
metadata:
  name: "eirini-privileged"
  labels:
    app.kubernetes.io/component: "eirini-privileged"
---
# Role binding for service account "eirini-privileged" and role "configgin-role"
apiVersion: "rbac.authorization.k8s.io/v1"
kind: "RoleBinding"
metadata:
  name: "eirini-privileged-configgin-role-binding"
  labels:
    app.kubernetes.io/component: "eirini-privileged-configgin-role-binding"
subjects:
- kind: "ServiceAccount"
  name: "eirini-privileged"
roleRef:
  apiGroup: "rbac.authorization.k8s.io"
  kind: "Role"
  name: "configgin-role"
---
# Cluster role binding for service account "eirini-privileged" and cluster role
# "eirini-role"
apiVersion: "rbac.authorization.k8s.io/v1"
kind: "ClusterRoleBinding"
metadata:
  name: "eirini-privileged-eirini-role-cluster-binding"
  labels:
    app.kubernetes.io/component: "eirini-privileged-eirini-role-cluster-binding"
subjects:
- kind: "ServiceAccount"
  name: "eirini-privileged"
  namespace: "~"
roleRef:
  kind: "ClusterRole"
  apiGroup: "rbac.authorization.k8s.io"
  name: "eirini-role"
---
# Cluster role binding for service account "eirini-privileged" and cluster role
# "privileged"
apiVersion: "rbac.authorization.k8s.io/v1"
kind: "ClusterRoleBinding"
metadata:
  name: "eirini-privileged-privileged-cluster-binding"
  labels:
    app.kubernetes.io/component: "eirini-privileged-privileged-cluster-binding"
subjects:
- kind: "ServiceAccount"
  name: "eirini-privileged"
  namespace: "~"
roleRef:
  kind: "ClusterRole"
  apiGroup: "rbac.authorization.k8s.io"
  name: "privileged"
---
apiVersion: "v1"
items:
- apiVersion: "v1"
  kind: "Service"
  metadata:
    name: "eirini-set"
    labels:
      app.kubernetes.io/component: "eirini-set"
  spec:
    clusterIP: "None"
    ports:
    - name: "opi-server"
      port: 8085
      protocol: "TCP"
      targetPort: 0
    selector:
      app.kubernetes.io/component: "eirini"
- apiVersion: "v1"
  kind: "Service"
  metadata:
    name: "eirini-opi-set"
    labels:
      app.kubernetes.io/component: "eirini-opi-set"
  spec:
    clusterIP: "None"
    ports:
    - name: "opi-server"
      port: 8085
      protocol: "TCP"
      targetPort: 0
    selector:
      app.kubernetes.io/component: "eirini"
- apiVersion: "v1"
  kind: "Service"
  metadata:
    name: "eirini-opi"
    labels:
      app.kubernetes.io/component: "eirini-opi"
  spec:
    ports:
    - name: "opi-server"
      port: 8085
      protocol: "TCP"
      targetPort: 8085
    selector:
      app.kubernetes.io/component: "eirini"
kind: "List"
---
# The eirini instance group contains the following jobs:
#
# - global-properties: Dummy BOSH job used to host global parameters that are
#   required to configure SCF
#
# - authorize-internal-ca: Install both internal and UAA CA certificates
#
# - patch-properties: Dummy BOSH job used to host parameters that are used in
#   SCF patches for upstream bugs
#
# Also: opi
apiVersion: "apps/v1beta1"
kind: "StatefulSet"
metadata:
  name: "eirini"
  labels:
    app.kubernetes.io/component: "eirini"
spec:
  podManagementPolicy: "Parallel"
  replicas: 1
  selector:
    matchLabels:
      skiff-role-name: "eirini"
  serviceName: "eirini-set"
  template:
    metadata:
      annotations: {}
      labels:
        app.kubernetes.io/component: "eirini"
      name: "eirini"
    spec:
      containers:
      - env:
        - name: "AZ_LABEL_NAME"
          value: ""
        - name: "CATS_SUITES"
          value: ""
        - name: "CC_SERVER_CRT"
          valueFrom:
            secretKeyRef:
              key: "cc-server-crt"
              name: "secrets"
        - name: "CC_SERVER_CRT_KEY"
          valueFrom:
            secretKeyRef:
              key: "cc-server-crt-key"
              name: "secrets"
        - name: "DOMAIN"
          value: ""
        - name: "DOPPLER_CERT"
          valueFrom:
            secretKeyRef:
              key: "doppler-cert"
              name: "secrets"
        - name: "DOPPLER_CERT_KEY"
          valueFrom:
            secretKeyRef:
              key: "doppler-cert-key"
              name: "secrets"
        - name: "EIRINI_IMAGE"
          value: "eirini/recipe:ci-24.0.0"
        - name: "EIRINI_KUBE_HEAPSTER_ADDRESS"
          value: "http://heapster.kube-system/apis/metrics/v1alpha1"
        - name: "EIRINI_KUBE_NAMESPACE"
          value: "eirini"
        - name: "GARDEN_ROOTFS_DRIVER"
          value: "btrfs"
        - name: "INTERNAL_CA_CERT"
          valueFrom:
            secretKeyRef:
              key: "internal-ca-cert"
              name: "secrets"
        - name: "KUBERNETES_CLUSTER_DOMAIN"
          value: ""
        - name: "KUBERNETES_NAMESPACE"
          valueFrom:
            fieldRef:
              fieldPath: "metadata.namespace"
        - name: "MONIT_PASSWORD"
          valueFrom:
            secretKeyRef:
              key: "monit-password"
              name: "secrets"
        - name: "NATS_PASSWORD"
          valueFrom:
            secretKeyRef:
              key: "nats-password"
              name: "secrets"
        - name: "PZ_LABEL_NAME"
          value: ""
        - name: "SCF_LOG_HOST"
          value: ""
        - name: "SCF_LOG_PORT"
          value: "514"
        - name: "SCF_LOG_PROTOCOL"
          value: "tcp"
        - name: "UAA_CA_CERT"
          valueFrom:
            secretKeyRef:
              key: "uaa-ca-cert"
              name: "secrets"
        - name: "VCAP_HARD_NPROC"
          value: "2048"
        - name: "VCAP_SOFT_NPROC"
          value: "1024"
        image: "registry.suse.com/cap/scf-eirini:cfe1f3c7eded129a18b801ce0535fcdc053d5d5e"
        lifecycle:
          preStop:
            exec:
              command:
              - "/opt/fissile/pre-stop.sh"
        livenessProbe: ~
        name: "eirini"
        ports:
        - containerPort: 8085
          name: "opi-server"
          protocol: "TCP"
        readinessProbe:
          exec:
            command:
            - "/opt/fissile/readiness-probe.sh"
        resources:
          requests:
            memory: "256Mi"
            cpu: "2000m"
          limits: {}
        securityContext:
          allowPrivilegeEscalation: true
        volumeMounts:
        - mountPath: "/opt/fissile/config"
          name: "deployment-manifest"
          readOnly: true
      dnsPolicy: "ClusterFirst"
      imagePullSecrets:
      - name: "registry-credentials"
      restartPolicy: "Always"
      serviceAccountName: "eirini-privileged"
      terminationGracePeriodSeconds: 600
      volumes:
      - name: "deployment-manifest"
        secret:
          secretName: "deployment-manifest"
          items:
          - key: "deployment-manifest"
            path: "deployment-manifest.yml"
