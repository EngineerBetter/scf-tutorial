---
apiVersion: "v1"
items:
- apiVersion: "v1"
  kind: "Service"
  metadata:
    name: "mysql-set"
    labels:
      app.kubernetes.io/component: "mysql-set"
  spec:
    clusterIP: "None"
    ports:
    - name: "mysql"
      port: 13306
      protocol: "TCP"
      targetPort: 0
    - name: "galera-tcp"
      port: 4567
      protocol: "TCP"
      targetPort: 0
    - name: "galera-udp"
      port: 4567
      protocol: "UDP"
      targetPort: 0
    - name: "galera-ist"
      port: 4568
      protocol: "TCP"
      targetPort: 0
    - name: "healthcheck"
      port: 9200
      protocol: "TCP"
      targetPort: 0
    - name: "xtrabackup"
      port: 4444
      protocol: "TCP"
      targetPort: 0
    - name: "api-proxy"
      port: 8080
      protocol: "TCP"
      targetPort: 0
    - name: "mysql-proxy"
      port: 3306
      protocol: "TCP"
      targetPort: 0
    - name: "healthck-proxy"
      port: 1936
      protocol: "TCP"
      targetPort: 0
    selector:
      app.kubernetes.io/component: "mysql"
- apiVersion: "v1"
  kind: "Service"
  metadata:
    name: "mysql-mysql-set"
    labels:
      app.kubernetes.io/component: "mysql-mysql-set"
  spec:
    clusterIP: "None"
    ports:
    - name: "mysql"
      port: 13306
      protocol: "TCP"
      targetPort: 0
    - name: "galera-tcp"
      port: 4567
      protocol: "TCP"
      targetPort: 0
    - name: "galera-udp"
      port: 4567
      protocol: "UDP"
      targetPort: 0
    - name: "galera-ist"
      port: 4568
      protocol: "TCP"
      targetPort: 0
    - name: "healthcheck"
      port: 9200
      protocol: "TCP"
      targetPort: 0
    - name: "xtrabackup"
      port: 4444
      protocol: "TCP"
      targetPort: 0
    selector:
      app.kubernetes.io/component: "mysql"
- apiVersion: "v1"
  kind: "Service"
  metadata:
    name: "mysql-mysql"
    labels:
      app.kubernetes.io/component: "mysql-mysql"
  spec:
    ports:
    - name: "mysql"
      port: 13306
      protocol: "TCP"
      targetPort: 13306
    - name: "galera-tcp"
      port: 4567
      protocol: "TCP"
      targetPort: 4567
    - name: "galera-udp"
      port: 4567
      protocol: "UDP"
      targetPort: 4567
    - name: "galera-ist"
      port: 4568
      protocol: "TCP"
      targetPort: 4568
    - name: "healthcheck"
      port: 9200
      protocol: "TCP"
      targetPort: 9200
    - name: "xtrabackup"
      port: 4444
      protocol: "TCP"
      targetPort: 4444
    selector:
      app.kubernetes.io/component: "mysql"
- apiVersion: "v1"
  kind: "Service"
  metadata:
    name: "mysql-proxy-set"
    labels:
      app.kubernetes.io/component: "mysql-proxy-set"
  spec:
    clusterIP: "None"
    ports:
    - name: "api-proxy"
      port: 8080
      protocol: "TCP"
      targetPort: 0
    - name: "mysql-proxy"
      port: 3306
      protocol: "TCP"
      targetPort: 0
    - name: "healthck-proxy"
      port: 1936
      protocol: "TCP"
      targetPort: 0
    selector:
      app.kubernetes.io/component: "mysql"
- apiVersion: "v1"
  kind: "Service"
  metadata:
    name: "mysql-proxy"
    labels:
      app.kubernetes.io/component: "mysql-proxy"
  spec:
    ports:
    - name: "api-proxy"
      port: 8080
      protocol: "TCP"
      targetPort: 8080
    - name: "mysql-proxy"
      port: 3306
      protocol: "TCP"
      targetPort: 3306
    - name: "healthck-proxy"
      port: 1936
      protocol: "TCP"
      targetPort: 1936
    selector:
      app.kubernetes.io/component: "mysql"
kind: "List"
---
# The mysql instance group contains the following jobs:
#
# - global-properties: Dummy BOSH job used to host global parameters that are
#   required to configure SCF
#
# - patch-properties: Dummy BOSH job used to host parameters that are used in
#   SCF patches for upstream bugs
#
# Also: mysql and proxy
apiVersion: "apps/v1beta1"
kind: "StatefulSet"
metadata:
  name: "mysql"
  labels:
    app.kubernetes.io/component: "mysql"
spec:
  podManagementPolicy: "OrderedReady"
  replicas: 1
  selector:
    matchLabels:
      skiff-role-name: "mysql"
  serviceName: "mysql-set"
  template:
    metadata:
      annotations: {}
      labels:
        app.kubernetes.io/component: "mysql"
      name: "mysql"
    spec:
      containers:
      - env:
        - name: "AZ_LABEL_NAME"
          value: ""
        - name: "CATS_SUITES"
          value: ""
        - name: "GARDEN_ROOTFS_DRIVER"
          value: "btrfs"
        - name: "INTERNAL_CA_CERT"
          valueFrom:
            secretKeyRef:
              key: "internal-ca-cert"
              name: "secrets"
        - name: "KUBERNETES_CLUSTER_DOMAIN"
          value: ""
        - name: "KUBERNETES_NAMESPACE"
          valueFrom:
            fieldRef:
              fieldPath: "metadata.namespace"
        - name: "MONIT_PASSWORD"
          valueFrom:
            secretKeyRef:
              key: "monit-password"
              name: "secrets"
        - name: "MYSQL_ADMIN_PASSWORD"
          valueFrom:
            secretKeyRef:
              key: "mysql-admin-password"
              name: "secrets"
        - name: "MYSQL_CCDB_ROLE_PASSWORD"
          valueFrom:
            secretKeyRef:
              key: "mysql-ccdb-role-password"
              name: "secrets"
        - name: "MYSQL_CF_USB_PASSWORD"
          valueFrom:
            secretKeyRef:
              key: "mysql-cf-usb-password"
              name: "secrets"
        - name: "MYSQL_CLUSTER_HEALTH_PASSWORD"
          valueFrom:
            secretKeyRef:
              key: "mysql-cluster-health-password"
              name: "secrets"
        - name: "MYSQL_CREDHUB_USER_PASSWORD"
          valueFrom:
            secretKeyRef:
              key: "mysql-credhub-user-password"
              name: "secrets"
        - name: "MYSQL_DIEGO_LOCKET_PASSWORD"
          valueFrom:
            secretKeyRef:
              key: "mysql-diego-locket-password"
              name: "secrets"
        - name: "MYSQL_DIEGO_PASSWORD"
          valueFrom:
            secretKeyRef:
              key: "mysql-diego-password"
              name: "secrets"
        - name: "MYSQL_GALERA_HEALTHCHECK_ENDPOINT_PASSWORD"
          valueFrom:
            secretKeyRef:
              key: "mysql-galera-healthcheck-endpoint-password"
              name: "secrets"
        - name: "MYSQL_PERSI_NFS_PASSWORD"
          valueFrom:
            secretKeyRef:
              key: "mysql-persi-nfs-password"
              name: "secrets"
        - name: "MYSQL_PROXY_ADMIN_PASSWORD"
          valueFrom:
            secretKeyRef:
              key: "mysql-proxy-admin-password"
              name: "secrets"
        - name: "MYSQL_PROXY_HEALTHCHECK_TIMEOUT"
          value: "30000"
        - name: "MYSQL_ROUTING_API_PASSWORD"
          valueFrom:
            secretKeyRef:
              key: "mysql-routing-api-password"
              name: "secrets"
        - name: "PZ_LABEL_NAME"
          value: ""
        - name: "SCF_LOG_HOST"
          value: ""
        - name: "SCF_LOG_PORT"
          value: "514"
        - name: "SCF_LOG_PROTOCOL"
          value: "tcp"
        - name: "VCAP_HARD_NPROC"
          value: "2048"
        - name: "VCAP_SOFT_NPROC"
          value: "1024"
        image: "registry.suse.com/cap/scf-mysql:27b2976814a27e78fb741d7c6bbd4ec008609398"
        lifecycle:
          preStop:
            exec:
              command:
              - "/opt/fissile/pre-stop.sh"
        livenessProbe: ~
        name: "mysql"
        ports:
        - containerPort: 13306
          name: "mysql"
          protocol: "TCP"
        - containerPort: 4567
          name: "galera-tcp"
          protocol: "TCP"
        - containerPort: 4567
          name: "galera-udp"
          protocol: "UDP"
        - containerPort: 4568
          name: "galera-ist"
          protocol: "TCP"
        - containerPort: 9200
          name: "healthcheck"
          protocol: "TCP"
        - containerPort: 4444
          name: "xtrabackup"
          protocol: "TCP"
        - containerPort: 8080
          name: "api-proxy"
          protocol: "TCP"
        - containerPort: 3306
          name: "mysql-proxy"
          protocol: "TCP"
        - containerPort: 1936
          name: "healthck-proxy"
          protocol: "TCP"
        readinessProbe:
          exec:
            command:
            - "/opt/fissile/readiness-probe.sh"
            - "curl --silent --fail --head http://${HOSTNAME}:9200/"
            - "curl --silent --fail --head http://${HOSTNAME}:1936/"
        resources:
          requests:
            memory: "2500Mi"
            cpu: "2000m"
          limits: {}
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: "/var/vcap/store"
          name: "mysql-data"
          readOnly: false
        - mountPath: "/opt/fissile/config"
          name: "deployment-manifest"
          readOnly: true
      dnsPolicy: "ClusterFirst"
      imagePullSecrets:
      - name: "registry-credentials"
      restartPolicy: "Always"
      terminationGracePeriodSeconds: 600
      volumes:
      - name: "deployment-manifest"
        secret:
          secretName: "deployment-manifest"
          items:
          - key: "deployment-manifest"
            path: "deployment-manifest.yml"
  volumeClaimTemplates:
  - metadata:
      name: "mysql-data"
      annotations:
        volume.beta.kubernetes.io/storage-class: "persistent"
    spec:
      accessModes:
      - "ReadWriteOnce"
      resources:
        requests:
          storage: "20G"
