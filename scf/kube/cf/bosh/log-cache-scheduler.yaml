---
# The log-cache-scheduler instance group contains the following jobs:
#
# - global-properties: Dummy BOSH job used to host global parameters that are
#   required to configure SCF
#
# - authorize-internal-ca: Install both internal and UAA CA certificates
#
# - log-cache-scheduler-properties: Dummy BOSH job used to host parameters that
#   are used in SCF patches
#
# Also: log-cache-scheduler, log-cache-expvar-forwarder, and bpm
apiVersion: "apps/v1beta1"
kind: "StatefulSet"
metadata:
  name: "log-cache-scheduler"
  labels:
    app.kubernetes.io/component: "log-cache-scheduler"
spec:
  podManagementPolicy: "Parallel"
  replicas: 1
  selector:
    matchLabels:
      skiff-role-name: "log-cache-scheduler"
  serviceName: "log-cache-scheduler-set"
  template:
    metadata:
      annotations: {}
      labels:
        app.kubernetes.io/component: "log-cache-scheduler"
      name: "log-cache-scheduler"
    spec:
      containers:
      - env:
        - name: "AZ_LABEL_NAME"
          value: ""
        - name: "CATS_SUITES"
          value: ""
        - name: "GARDEN_ROOTFS_DRIVER"
          value: "btrfs"
        - name: "INTERNAL_CA_CERT"
          valueFrom:
            secretKeyRef:
              key: "internal-ca-cert"
              name: "secrets"
        - name: "KUBERNETES_CLUSTER_DOMAIN"
          value: ""
        - name: "KUBERNETES_NAMESPACE"
          valueFrom:
            fieldRef:
              fieldPath: "metadata.namespace"
        - name: "LOG_CACHE_CERT"
          valueFrom:
            secretKeyRef:
              key: "log-cache-cert"
              name: "secrets"
        - name: "LOG_CACHE_CERT_KEY"
          valueFrom:
            secretKeyRef:
              key: "log-cache-cert-key"
              name: "secrets"
        - name: "LOG_CACHE_TO_LOGGREGATOR_AGENT_CERT"
          valueFrom:
            secretKeyRef:
              key: "log-cache-to-loggregator-agent-cert"
              name: "secrets"
        - name: "LOG_CACHE_TO_LOGGREGATOR_AGENT_CERT_KEY"
          valueFrom:
            secretKeyRef:
              key: "log-cache-to-loggregator-agent-cert-key"
              name: "secrets"
        - name: "MONIT_PASSWORD"
          valueFrom:
            secretKeyRef:
              key: "monit-password"
              name: "secrets"
        - name: "PZ_LABEL_NAME"
          value: ""
        - name: "SCF_LOG_HOST"
          value: ""
        - name: "SCF_LOG_PORT"
          value: "514"
        - name: "SCF_LOG_PROTOCOL"
          value: "tcp"
        - name: "UAA_CA_CERT"
          valueFrom:
            secretKeyRef:
              key: "uaa-ca-cert"
              name: "secrets"
        - name: "VCAP_HARD_NPROC"
          value: "2048"
        - name: "VCAP_SOFT_NPROC"
          value: "1024"
        image: "registry.suse.com/cap/scf-log-cache-scheduler:534d79a5aafc6e080734d4ed6b2df103d7656a07"
        lifecycle:
          preStop:
            exec:
              command:
              - "/opt/fissile/pre-stop.sh"
        livenessProbe: ~
        name: "log-cache-scheduler"
        ports: ~
        readinessProbe:
          exec:
            command:
            - "/opt/fissile/readiness-probe.sh"
        resources:
          requests:
            memory: "410Mi"
            cpu: "2000m"
          limits: {}
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: "/opt/fissile/config"
          name: "deployment-manifest"
          readOnly: true
      - env:
        - name: "AZ_LABEL_NAME"
          value: ""
        - name: "CATS_SUITES"
          value: ""
        - name: "GARDEN_ROOTFS_DRIVER"
          value: "btrfs"
        - name: "INTERNAL_CA_CERT"
          valueFrom:
            secretKeyRef:
              key: "internal-ca-cert"
              name: "secrets"
        - name: "KUBERNETES_CLUSTER_DOMAIN"
          value: ""
        - name: "KUBERNETES_NAMESPACE"
          valueFrom:
            fieldRef:
              fieldPath: "metadata.namespace"
        - name: "KUBE_AZ"
          value: "z1"
        - name: "LOGGREGATOR_AGENT_CERT"
          valueFrom:
            secretKeyRef:
              key: "loggregator-agent-cert"
              name: "secrets"
        - name: "LOGGREGATOR_AGENT_CERT_KEY"
          valueFrom:
            secretKeyRef:
              key: "loggregator-agent-cert-key"
              name: "secrets"
        - name: "LOGGREGATOR_FORWARD_CERT"
          valueFrom:
            secretKeyRef:
              key: "loggregator-forward-cert"
              name: "secrets"
        - name: "LOGGREGATOR_FORWARD_CERT_KEY"
          valueFrom:
            secretKeyRef:
              key: "loggregator-forward-cert-key"
              name: "secrets"
        - name: "MONIT_PASSWORD"
          valueFrom:
            secretKeyRef:
              key: "monit-password"
              name: "secrets"
        - name: "PZ_LABEL_NAME"
          value: ""
        - name: "SCF_LOG_HOST"
          value: ""
        - name: "SCF_LOG_PORT"
          value: "514"
        - name: "SCF_LOG_PROTOCOL"
          value: "tcp"
        - name: "VCAP_HARD_NPROC"
          value: "2048"
        - name: "VCAP_SOFT_NPROC"
          value: "1024"
        image: "registry.suse.com/cap/scf-loggregator-agent:39c7e06aaa613d8d7ae5ac05dc952c5d1cf1be17"
        lifecycle:
          preStop:
            exec:
              command:
              - "/opt/fissile/pre-stop.sh"
        livenessProbe: ~
        name: "loggregator-agent"
        ports: ~
        readinessProbe: ~
        resources:
          requests: {}
          limits: {}
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: "/opt/fissile/config"
          name: "deployment-manifest"
          readOnly: true
      dnsPolicy: "ClusterFirst"
      imagePullSecrets:
      - name: "registry-credentials"
      restartPolicy: "Always"
      serviceAccountName: "default-privileged"
      terminationGracePeriodSeconds: 600
      volumes:
      - name: "deployment-manifest"
        secret:
          secretName: "deployment-manifest"
          items:
          - key: "deployment-manifest"
            path: "deployment-manifest.yml"
