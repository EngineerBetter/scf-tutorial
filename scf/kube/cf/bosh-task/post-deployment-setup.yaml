---
# Service account "eirini" is used by the following instance groups:
# - post-deployment-setup
apiVersion: "v1"
kind: "ServiceAccount"
metadata:
  name: "eirini"
  labels:
    app.kubernetes.io/component: "eirini"
---
# Role binding for service account "eirini" and role "configgin-role"
apiVersion: "rbac.authorization.k8s.io/v1"
kind: "RoleBinding"
metadata:
  name: "eirini-configgin-role-binding"
  labels:
    app.kubernetes.io/component: "eirini-configgin-role-binding"
subjects:
- kind: "ServiceAccount"
  name: "eirini"
roleRef:
  apiGroup: "rbac.authorization.k8s.io"
  kind: "Role"
  name: "configgin-role"
---
# Cluster role binding for service account "eirini" and cluster role
# "eirini-role"
apiVersion: "rbac.authorization.k8s.io/v1"
kind: "ClusterRoleBinding"
metadata:
  name: "eirini-eirini-role-cluster-binding"
  labels:
    app.kubernetes.io/component: "eirini-eirini-role-cluster-binding"
subjects:
- kind: "ServiceAccount"
  name: "eirini"
  namespace: "~"
roleRef:
  kind: "ClusterRole"
  apiGroup: "rbac.authorization.k8s.io"
  name: "eirini-role"
---
# The post-deployment-setup instance group contains the following jobs:
#
# - global-properties: Dummy BOSH job used to host global parameters that are
#   required to configure SCF
#
# - authorize-internal-ca: Install both internal and UAA CA certificates
#
# - uaa-create-user: Create the initial user in UAA
#
# - configure-scf: Uses the cf CLI to configure SCF once it's online (things
#   like proxy settings, service brokers, etc.)
apiVersion: "batch/v1"
kind: "Job"
metadata:
  name: "post-deployment-setup"
  labels:
    app.kubernetes.io/component: "post-deployment-setup"
spec:
  template:
    metadata:
      name: "post-deployment-setup"
      labels:
        app.kubernetes.io/component: "post-deployment-setup"
    spec:
      containers:
      - env:
        - name: "AUTOSCALER_UAA_CLIENT_SECRET"
          valueFrom:
            secretKeyRef:
              key: "autoscaler-uaa-client-secret"
              name: "secrets"
        - name: "AZ_LABEL_NAME"
          value: ""
        - name: "CATS_SUITES"
          value: ""
        - name: "CLUSTER_ADMIN_AUTHORITIES"
          value: "scim.write,scim.read,openid,cloud_controller.admin,clients.read,clients.write,doppler.firehose,routing.router_groups.read,routing.router_groups.write"
        - name: "CLUSTER_ADMIN_PASSWORD"
          valueFrom:
            secretKeyRef:
              key: "cluster-admin-password"
              name: "secrets"
        - name: "DOMAIN"
          value: ""
        - name: "EIRINI_CERT_COPIER_IMAGE"
          value: "splatform/eirini-cert-copier:1.0.0.4.gd8e7208"
        - name: "EIRINI_FLUENTD_IMAGE"
          value: "eirini/loggregator-fluentd:0.1.0"
        - name: "EIRINI_KUBE_NAMESPACE"
          value: "eirini"
        - name: "FEATURE_EIRINI_ENABLED"
          value: "false"
        - name: "GARDEN_ROOTFS_DRIVER"
          value: "btrfs"
        - name: "HTTPS_PROXY"
          value: ""
        - name: "HTTP_PROXY"
          value: ""
        - name: "INTERNAL_CA_CERT"
          valueFrom:
            secretKeyRef:
              key: "internal-ca-cert"
              name: "secrets"
        - name: "KUBERNETES_CLUSTER_DOMAIN"
          value: ""
        - name: "KUBERNETES_NAMESPACE"
          valueFrom:
            fieldRef:
              fieldPath: "metadata.namespace"
        - name: "KUBE_SECRETS_GENERATION_NAME"
          value: "secrets-1"
        - name: "MONIT_PASSWORD"
          valueFrom:
            secretKeyRef:
              key: "monit-password"
              name: "secrets"
        - name: "NO_PROXY"
          value: ""
        - name: "PERSI_NFS_BROKER_PASSWORD"
          valueFrom:
            secretKeyRef:
              key: "persi-nfs-broker-password"
              name: "secrets"
        - name: "PZ_LABEL_NAME"
          value: ""
        - name: "SCF_LOG_HOST"
          value: ""
        - name: "SCF_LOG_PORT"
          value: "514"
        - name: "SCF_LOG_PROTOCOL"
          value: "tcp"
        - name: "UAA_ADMIN_CLIENT_SECRET"
          valueFrom:
            secretKeyRef:
              key: "uaa-admin-client-secret"
              name: "secrets"
        - name: "UAA_CA_CERT"
          valueFrom:
            secretKeyRef:
              key: "uaa-ca-cert"
              name: "secrets"
        - name: "UAA_CC_CLIENT_SECRET"
          valueFrom:
            secretKeyRef:
              key: "uaa-cc-client-secret"
              name: "secrets"
        - name: "UAA_CLIENTS_CC_ROUTING_SECRET"
          valueFrom:
            secretKeyRef:
              key: "uaa-clients-cc-routing-secret"
              name: "secrets"
        - name: "UAA_CLIENTS_CC_SERVICE_DASHBOARDS_CLIENT_SECRET"
          valueFrom:
            secretKeyRef:
              key: "uaa-clients-cc-service-dashboards-client-secret"
              name: "secrets"
        - name: "UAA_CLIENTS_CC_SERVICE_KEY_CLIENT_SECRET"
          valueFrom:
            secretKeyRef:
              key: "uaa-clients-cc-service-key-client-secret"
              name: "secrets"
        - name: "UAA_CLIENTS_CF_USB_SECRET"
          valueFrom:
            secretKeyRef:
              key: "uaa-clients-cf-usb-secret"
              name: "secrets"
        - name: "UAA_CLIENTS_CLOUD_CONTROLLER_USERNAME_LOOKUP_SECRET"
          valueFrom:
            secretKeyRef:
              key: "uaa-clients-cloud-controller-username-lookup-secret"
              name: "secrets"
        - name: "UAA_CLIENTS_CREDHUB_USER_CLI_SECRET"
          valueFrom:
            secretKeyRef:
              key: "uaa-clients-credhub-user-cli-secret"
              name: "secrets"
        - name: "UAA_CLIENTS_DIEGO_SSH_PROXY_SECRET"
          valueFrom:
            secretKeyRef:
              key: "uaa-clients-diego-ssh-proxy-secret"
              name: "secrets"
        - name: "UAA_CLIENTS_DOPPLER_SECRET"
          valueFrom:
            secretKeyRef:
              key: "uaa-clients-doppler-secret"
              name: "secrets"
        - name: "UAA_CLIENTS_GOROUTER_SECRET"
          valueFrom:
            secretKeyRef:
              key: "uaa-clients-gorouter-secret"
              name: "secrets"
        - name: "UAA_CLIENTS_LOGIN_SECRET"
          valueFrom:
            secretKeyRef:
              key: "uaa-clients-login-secret"
              name: "secrets"
        - name: "UAA_CLIENTS_SCF_AUTO_CONFIG_SECRET"
          valueFrom:
            secretKeyRef:
              key: "uaa-clients-scf-auto-config-secret"
              name: "secrets"
        - name: "UAA_CLIENTS_TCP_EMITTER_SECRET"
          valueFrom:
            secretKeyRef:
              key: "uaa-clients-tcp-emitter-secret"
              name: "secrets"
        - name: "UAA_CLIENTS_TCP_ROUTER_SECRET"
          valueFrom:
            secretKeyRef:
              key: "uaa-clients-tcp-router-secret"
              name: "secrets"
        - name: "UAA_HOST"
          value: ""
        - name: "UAA_PORT"
          value: "2793"
        - name: "VCAP_HARD_NPROC"
          value: "2048"
        - name: "VCAP_SOFT_NPROC"
          value: "1024"
        image: "registry.suse.com/cap/scf-post-deployment-setup:168432317fcc3bdf30360fc982a651a9d104ef33"
        lifecycle:
          preStop:
            exec:
              command:
              - "/opt/fissile/pre-stop.sh"
        livenessProbe: ~
        name: "post-deployment-setup"
        ports: ~
        readinessProbe: ~
        resources:
          requests:
            memory: "256Mi"
            cpu: "1000m"
          limits: {}
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: "/opt/fissile/config"
          name: "deployment-manifest"
          readOnly: true
      dnsPolicy: "ClusterFirst"
      imagePullSecrets:
      - name: "registry-credentials"
      restartPolicy: "OnFailure"
      serviceAccountName: "eirini"
      terminationGracePeriodSeconds: 600
      volumes:
      - name: "deployment-manifest"
        secret:
          secretName: "deployment-manifest"
          items:
          - key: "deployment-manifest"
            path: "deployment-manifest.yml"
